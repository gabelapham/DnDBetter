dwarf.py
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  1) import requests
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  2) from bs4 import BeautifulSoup
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  3) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  4) URL = "http://dnd5e.wikidot.com/dwarf"
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  5) page = requests.get(URL)
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  6) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  7) soup = BeautifulSoup(page.content, "html.parser")
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  8) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  9) # title
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 10) title = soup.find('div', class_='page-title page-header>
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 11) print(title + ':')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 12) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 13) # description
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 14) desc = soup.find('strong').text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 15) print(desc + '\n')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 16) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 17) # data
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 18) data = soup.find('div', class_='feature')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 19) # iterate through the rows to access the features and v>
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 20) i = 1
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 21) for section in data.find_all('div', class_='row'):
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 22)     # iteration 1 is for features
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 23)     if i == 1:
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 24)         feature_header = section.h1.span.text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 25)         print(feature_header)
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 26)         features_list = section.find('div', class_='col>
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 27)         for feature in features_list.find_all('ul'):
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 28)             feature_text = feature.li.text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 29)             text_list = feature_text.split('.')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 30)             # print the feature
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 31)             print(text_list[0] + ': ')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 32)             # print the feature description
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 33)             print(text_list[1])
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 34)     # iteration 2 is for hill dwarf
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 35)     if i == 2:
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 36)         print()
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 37)         variant1_header = section.h3.span.text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 38)         print(variant1_header, end='')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 39)         variant1_list = section.find('div', class_='col>
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 40)         for feature1 in variant1_list.find_all('ul'):
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 41)             feature1_text = feature1.li.text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 42)             text1_list = feature1.text.split('.')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 43)             # print the feature
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 44)             print(text1_list[0] + ': ')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 45)             # print the feature description
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 46)             print(text1_list[1], end='')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 47)     # iteration 3 is for mountain dwarf
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 48)     if i == 3:
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 49)         print('\n')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 50)         variant2_header = section.h3.span.text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 51)         print(variant2_header, end='')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 52)         variant2_list = section.find('div', class_='col>
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 53)         for feature2 in variant2_list.find_all('ul'):
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 54)             feature2_text = feature2.li.text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 55)             text2_list = feature2.text.split('.')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 56)             # print the feature
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 57)             print(text2_list[0] + ': ')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 58)             # print the feature description
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 59)             print(text2_list[1], end='')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 60)     i += 1

halfling.py
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  1) import requests
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  2) from bs4 import BeautifulSoup
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  3) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  4) URL = "http://dnd5e.wikidot.com/halfling"
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  5) page = requests.get(URL)
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  6) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  7) soup = BeautifulSoup(page.content, "html.parser")
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  8) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  9) # title
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 10) title = soup.find('div', class_='page-title page-header>
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 11) print(title + ':')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 12) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 13) # description
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 14) desc = soup.find('strong').text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 15) print(desc + '\n')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 16) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 17) # data
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 18) data = soup.find('div', class_='feature')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 19) # iterate through the rows to access the features and v>
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 20) i = 1
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 21) for section in data.find_all('div', class_='row'):
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 22)     # iteration 1 is for features
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 23)     if i == 1:
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 24)         feature_header = section.h1.span.text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 25)         print(feature_header)
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 26)         features_list = section.find('div', class_='col>
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 27)         for feature in features_list.find_all('ul'):
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 28)             feature_text = feature.li.text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 29)             text_list = feature_text.split('.')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 30)             # print the feature
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 31)             print(text_list[0] + ': ')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 32)             # print the feature description
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 33)             print(text_list[1])
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 34)     # iteration 2 is for lightfoot halfling
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 35)     if i == 2:
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 36)         print()
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 37)         variant1_header = section.h3.span.text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 38)         print(variant1_header, end='')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 39)         variant1_list = section.find('div', class_='col>
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 40)         for feature1 in variant1_list.find_all('ul'):
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 41)             feature1_text = feature1.li.text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 42)             text1_list = feature1.text.split('.')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 43)             # print the feature
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 44)             print(text1_list[0] + ': ')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 45)             # print the feature description
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 46)             print(text1_list[1], end='')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 47)     # iteration 3 is for stout halfling
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 48)     if i == 3:
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 49)         print('\n')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 50)         variant2_header = section.h3.span.text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 51)         print(variant2_header, end='')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 52)         variant2_list = section.find('div', class_='col>
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 53)         for feature2 in variant2_list.find_all('ul'):
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 54)             feature2_text = feature2.li.text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 55)             text2_list = feature2.text.split('.')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 56)             # print the feature
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 57)             print(text2_list[0] + ': ')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 58)             # print the feature description
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 59)             print(text2_list[1], end='')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 60)     i += 1

human.py
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400  1) import requests
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400  2) from bs4 import BeautifulSoup
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400  3) 
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400  4) URL = "http://dnd5e.wikidot.com/human"
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400  5) page = requests.get(URL)
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400  6) 
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400  7) soup = BeautifulSoup(page.content, "html.parser")
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400  8) 
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400  9) # title
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 10) title = soup.find('div', class_='page-title page-header>
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 11) print(title + ':')
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 12) 
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 13) # description
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 14) desc = soup.find('strong').text
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 15) print(desc + '\n')
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 16) 
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 17) # data
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 18) data = soup.find('div', class_='feature')
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 19) # iterate through the rows to access the features and v>
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 20) i = 1
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 21) for section in data.find_all('div', class_='row'):
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 22)     # iteration 1 is for features
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 23)     if i == 1:
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 24)         feature_header = section.h1.span.text
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 25)         print(feature_header)
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 26)         features_list = section.find('div', class_='col>
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 27)         for feature in features_list.find_all('ul'):
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 28)             feature_text = feature.li.text
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 29)             text_list = feature_text.split('.')
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 30)             # print the feature
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 31)             print(text_list[0] + ': ')
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 32)             # print the feature description
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 33)             print(text_list[1])
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 34)     # iteration 2 is for the standard human
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 35)     if i == 2:
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 36)         print()
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 37)         variant1_header = section.h3.span.text
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 38)         print(variant1_header, end='')
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 39)         variant1_list = section.find('div', class_='col>
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 40)         for feature1 in variant1_list.find_all('ul'):
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 41)             feature1_text = feature1.li.text
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 42)             text1_list = feature1.text.split('.')
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 43)             # print the feature
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 44)             print(text1_list[0] + ': ')
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 45)             # print the feature description
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 46)             print(text1_list[1])
dbd4c7040 (TritonEden 2023-10-16 09:50:09 -0400 47)     # iteration 3 is for the variant human
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 48)     if i == 3:
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 49)         print()
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 50)         variant2_header = section.h3.span.text
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 51)         print(variant2_header, end='')
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 52)         variant2_list = section.find('div', class_='col>
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 53)         for feature2 in variant2_list.find_all('ul'):
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 54)             feature2_text = feature2.li.text
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 55)             text2_list = feature2.text.split('.')
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 56)             # print the feature
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 57)             print(text2_list[0] + ': ')
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 58)             # print the feature description
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 59)             print(text2_list[1], end='')
c3dd5da25 (TritonEden 2023-10-16 09:46:54 -0400 60)     i += 1

elf.py
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  1) import requests
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  2) from bs4 import BeautifulSoup
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  3) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  4) URL = "http://dnd5e.wikidot.com/elf"
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  5) page = requests.get(URL)
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  6) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  7) soup = BeautifulSoup(page.content, "html.parser")
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  8) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  9) # title
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 10) title = soup.find('div', class_='page-title page-header>
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 11) print(title + ':')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 12) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 13) # description
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 14) desc = soup.find('strong').text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 15) print(desc + '\n')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 16) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 17) # data
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 18) data = soup.find('div', class_='feature')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 19) # iterate through the rows to access the features and v>
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 20) i = 1
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 21) for section in data.find_all('div', class_='row'):
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 22)     # iteration 1 is for features
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 23)     if i == 1:
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 24)         feature_header = section.h1.span.text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 25)         print(feature_header)
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 26)         features_list = section.find('div', class_='col>
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 27)         for feature in features_list.find_all('ul'):
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 28)             feature_text = feature.li.text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 29)             text_list = feature_text.split('.')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 30)             # print the feature
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 31)             print(text_list[0] + ': ')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 32)             # print the feature description
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 33)             print(text_list[1])
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 34)     # iteration 2 is for dark elf
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 35)     if i == 2:
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 36)         print()
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 37)         variant1_header = section.h3.span.text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 38)         print(variant1_header, end='')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 39)         variant1_list = section.find('div', class_='col>
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 40)         for feature1 in variant1_list.find_all('ul'):
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 41)             feature1_text = feature1.li.text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 42)             text1_list = feature1.text.split('.')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 43)             # print the feature
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 44)             print(text1_list[0] + ': ')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 45)             # print the feature description
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 46)             print(text1_list[1], end='')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 47)     i += 1

half-elf.py
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  1) import requests
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  2) from bs4 import BeautifulSoup
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  3) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  4) URL = "http://dnd5e.wikidot.com/half-elf"
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  5) page = requests.get(URL)
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  6) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  7) soup = BeautifulSoup(page.content, "html.parser")
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  8) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  9) # title
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 10) title = soup.find('div', class_='page-title page-header>
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 11) print(title + ':')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 12) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 13) # description
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 14) desc = soup.find('strong').text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 15) print(desc + '\n')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 16) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 17) # features
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 18) features = soup.find('div', class_='feature')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 19) feature_header = features.h1.span.text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 20) print(feature_header)
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 21) features_list = features.find('div', class_='col-lg-12')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 22) for feature in features_list.find_all('ul'):
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 23)     feature_text = feature.li.text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 24)     text_list = feature_text.split('.')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 25)     # print the feature
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 26)     print(text_list[0] + ': ')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 27)     # print the feature description
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 28)     print(text_list[1])

half-orc.py
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  1) import requests
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  2) from bs4 import BeautifulSoup
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  3) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  4) URL = "http://dnd5e.wikidot.com/half-orc"
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  5) page = requests.get(URL)
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  6) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  7) soup = BeautifulSoup(page.content, "html.parser")
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  8) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400  9) # title
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 10) title = soup.find('div', class_='page-title page-header>
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 11) print(title + ':')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 12) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 13) # description
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 14) desc = soup.find('strong').text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 15) print(desc + '\n')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 16) 
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 17) # features
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 18) features = soup.find('div', class_='feature')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 19) feature_header = features.h1.span.text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 20) print(feature_header)
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 21) features_list = features.find('div', class_='col-lg-12')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 22) for feature in features_list.find_all('ul'):
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 23)     feature_text = feature.li.text
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 24)     text_list = feature_text.split('.')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 25)     # print the feature
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 26)     print(text_list[0] + ': ')
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 27)     # print the feature description
4cc5e7af8 (TritonEden 2023-10-16 09:15:05 -0400 28)     print(text_list[1])
