29131ae30 (JonClark28 2023-10-16 19:36:59 -0400   1) import requests
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400   2) from bs4 import BeautifulSoup
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400   3) import pandas as pd
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400   4) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400   5) # Used later for creating pandas dataframe. May become obsolete if classes are broken into individual files
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400   6) classNames = ["barbarian", "bard", "cleric", "druid", "fighter", "monk", "paladin", "ranger", "rogue", "wizard"]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400   7) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400   8) URL = "http://dnd5e.wikidot.com/barbarian"
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400   9) page = requests.get(URL)
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  10) soup = BeautifulSoup(page.content, "html.parser")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  11) results = soup.find("div", class_="col-lg-12")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  12) practice = results.text
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  13) # Every class gets a different # of features per level, so a table is used to hold the number of features per level per class
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  14) barbLevelUp = [0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 10, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  15) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  16) # Unfortunately, the wikidot website we are scraping from is not particularly well formatted when it comes to class information. As such, there is no means by which I
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  17) # can loop through the entire page to gather information, and must instead individually partition the data
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  18) practice = practice.partition("Hit Points")[1] + practice.partition("Hit Points")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  19) barbClassFeatures = [practice.partition("Proficiencies")[0]]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  20) practice = practice.partition("Proficiencies")[1] + practice.partition("Proficiencies")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  21) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  22) barbClassFeatures.append(practice.partition("Equipment")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  23) practice = practice.partition("Equipment")[1] + practice.partition("Proficiencies")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  24) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  25) barbClassFeatures.append(practice.partition("Rage")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  26) practice = practice.partition("Rage")[1] + practice.partition("Rage")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  27) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  28) barbClassFeatures.append(practice.partition("Unarmored Defense")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  29) practice = practice.partition("Unarmored Defense")[1] + practice.partition("Unarmored Defense")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  30) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  31) barbClassFeatures.append(practice.partition("Danger Sense")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  32) practice = practice.partition("Danger Sense")[1] + practice.partition("Danger Sense")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  33) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  34) barbClassFeatures.append(practice.partition("Reckless Attack")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  35) practice = practice.partition("Reckless Attack")[1] + practice.partition("Reckless Attack")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  36) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  37) barbClassFeatures.append(practice.partition("Primal Path")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  38) practice = practice.partition("Primal Path")[1] + practice.partition("Primal Path")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  39) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  40) barbClassFeatures.append(practice.partition("Primal Knowledge (Optional)")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  41) practice = practice.partition("Primal Knowledge (Optional)")[1] + practice.partition("Primal Knowledge (Optional)")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  42) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  43) barbClassFeatures.append(practice.partition("Ability Score Improvement")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  44) practice = practice.partition("Ability Score Improvement")[1] + practice.partition("Ability Score Improvement")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  45) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  46) barbClassFeatures.append(practice.partition("Extra Attack")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  47) practice = practice.partition("Extra Attack")[1] + practice.partition("Extra Attack")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  48) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  49) barbClassFeatures.append(practice.partition("Fast Movement")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  50) practice = practice.partition("Fast Movement")[1] + practice.partition("Fast Movement")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  51) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  52) barbClassFeatures.append(practice.partition("Feral Instinct")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  53) barbClassFeatures.append("Path Feature")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  54) practice = practice.partition("Feral Instinct")[1] + practice.partition("Feral Instinct")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  55) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  56) barbClassFeatures.append(practice.partition("Instinctive Pounce (Optional)")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  57) practice = (practice.partition("Instinctive Pounce (Optional)")[1] +
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  58)             practice.partition("Instinctive Pounce (Optional)")[2])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  59) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  60) barbClassFeatures.append(practice.partition("Brutal Critical")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  61) practice = practice.partition("Brutal Critical")[1] + practice.partition("Brutal Critical")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  62) barbClassFeatures.append("ASI")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  63) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  64) barbClassFeatures.append(practice.partition("Relentless Rage")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  65) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  66) # Certain pieces of class information, typical those that occur multiple times, are not included in wikidot's class description. So I occasionally had to append to the
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  67) # information by hand, and not by partition the website
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  68) barbClassFeatures.append("Path Feature")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  69) barbClassFeatures.append("Primal Knowledge (Optional)")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  70) practice = practice.partition("Relentless Rage")[1] + practice.partition("Relentless Rage")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  71) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  72) barbClassFeatures.append(practice.partition("Persistent Rage")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  73) barbClassFeatures.append("ASI")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  74) barbClassFeatures.append("Brutal Critical (2)")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  75) barbClassFeatures.append("Path Feature")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  76) practice = practice.partition("Persistent Rage")[1] + practice.partition("Persistent Rage")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  77) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  78) barbClassFeatures.append(practice.partition("Indomitable Might")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  79) barbClassFeatures.append("ASI")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  80) barbClassFeatures.append("Brutal Critical (3)")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  81) practice = practice.partition("Indomitable Might")[1] + practice.partition("Indomitable Might")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  82) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  83) barbClassFeatures.append(practice.partition("Primal Champion")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  84) barbClassFeatures.append("ASI")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  85) practice = practice.partition("Primal Champion")[1] + practice.partition("Primal Champion")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  86) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  87) barbClassFeatures.append(practice)
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  88) barbClassFeatures = [i for i in barbClassFeatures if i]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  89) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  90) # The process above repeats, but now for the bard class
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  91) URL = "http://dnd5e.wikidot.com/bard"
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  92) page = requests.get(URL)
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  93) soup = BeautifulSoup(page.content, "html.parser")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  94) results = soup.find("div", class_="col-lg-12")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  95) practice = results.text
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  96) bardLevelUp = [0, 0, 0, 1, 1, 2, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 8, 8, 9, 10, 10, 10, 12, 12, 13, 14, 14, 15, 16,
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  97)                16, 17, 18, 19, 19, 20]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  98) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400  99) practice = practice.partition("Hit Points")[1] + practice.partition("Hit Points")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 100) bardClassFeatures = [(practice.partition("Proficiencies")[0])]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 101) practice = practice.partition("Proficiencies")[1] + practice.partition("Proficiencies")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 102) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 103) bardClassFeatures.append(practice.partition("Equipment")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 104) practice = practice.partition("Equipment")[1] + practice.partition("Equipment")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 105) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 106) bardClassFeatures.append(practice.partition("Spellcasting")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 107) practice = practice.partition("Spellcasting")[1] + practice.partition("Spellcasting")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 108) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 109) bardClassFeatures.append(practice.partition("Bardic Inspiration")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 110) practice = practice.partition("Bardic Inspiration")[1] + practice.partition("Bardic Inspiration")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 111) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 112) bardClassFeatures.append(practice.partition("Jack of All Trades")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 113) practice = practice.partition("Jack of All Trades")[1] + practice.partition("Jack of All Trades")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 114) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 115) bardClassFeatures.append(practice.partition("Song of Rest")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 116) practice = practice.partition("Song of Rest")[1] + practice.partition("Song of Rest")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 117) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 118) bardClassFeatures.append(practice.partition("Magical Inspiration (Optional)")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 119) practice = (practice.partition("Magical Inspiration (Optional)")[1] +
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 120)             practice.partition("Magical Inspiration (Optional)")[2])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 121) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 122) bardClassFeatures.append(practice.partition("Bard College")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 123) practice = practice.partition("Bard College")[1] + practice.partition("Bard College")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 124) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 125) bardClassFeatures.append(practice.partition("Expertise")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 126) practice = practice.partition("Expertise")[1] + practice.partition("Expertise")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 127) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 128) bardClassFeatures.append(practice.partition("Ability Score Improvement")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 129) practice = practice.partition("Ability Score Improvement")[1] + practice.partition("Ability Score Improvement")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 130) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 131) bardClassFeatures.append(practice.partition("Bardic Versatility")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 132) practice = practice.partition("Bardic Versatility")[1] + practice.partition("Bardic Versatility")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 133) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 134) bardClassFeatures.append(practice.partition("Font of Inspiration")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 135) practice = practice.partition("Font of Inspiration")[1] + practice.partition("Font of Inspiration")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 136) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 137) bardClassFeatures.append("Bardic Inspiration (d8)")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 138) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 139) bardClassFeatures.append(practice.partition("Countercharm")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 140) practice = practice.partition("Countercharm")[1] + practice.partition("Countercharm")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 141) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 142) bardClassFeatures.append(practice.partition("Magical Secrets")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 143) practice = practice.partition("Magical Secrets")[1] + practice.partition("Magical Secrets")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 144) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 145) bardClassFeatures.append("Bard College Feature")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 146) bardClassFeatures.append("ASI")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 147) bardClassFeatures.append("Bardic Versatility (Optional)")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 148) bardClassFeatures.append("Song of Rest (d8)")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 149) bardClassFeatures.append("Bardic Inspiration (d10)")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 150) bardClassFeatures.append("Expertise")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 151) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 152) bardClassFeatures.append(practice.partition("Superior Inspiration")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 153) practice = practice.partition("Superior Inspiration")[1] + practice.partition("Superior Inspiration")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 154) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 155) bardClassFeatures.append("ASI")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 156) bardClassFeatures.append("Bardic Versatility (Optional)")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 157) bardClassFeatures.append("Song of rest (d10)")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 158) bardClassFeatures.append("Magical Secrets")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 159) bardClassFeatures.append("Bard College Feature")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 160) bardClassFeatures.append("Bardic Inspiration (d12)")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 161) bardClassFeatures.append("ASI")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 162) bardClassFeatures.append("Bardic Versatility (Optional)")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 163) bardClassFeatures.append("Song of rest (d12)")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 164) bardClassFeatures.append("Magical Secrets")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 165) bardClassFeatures.append("ASI")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 166) bardClassFeatures.append("Bardic Versatility (Optional)")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 167) bardClassFeatures.append(practice)
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 168) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 169) # Cleric information scraped by Tyler Catuncan. Same process as bard and barbarian
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 170) URL = "http://dnd5e.wikidot.com/cleric"
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 171) page = requests.get(URL)
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 172) soup = BeautifulSoup(page.content, "html.parser")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 173) results = soup.find("div", class_="col-lg-12")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 174) practice = results.text
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 175) practice = practice.partition("Hit Points")[1] + practice.partition("Hit Points")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 176) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 177) clericLevelUp = [0, 0, 0, 1, 1, 2, 2, 2, 4, 4, 5, 6, 6, 8, 8, 8, 8, 10, 11, 12, 12, 14, 16, 16, 17, 17, 18, 19, 19, 20]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 178) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 179) clericClassFeatures = [practice.partition("Proficiencies")[0]]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 180) practice = practice.partition("Proficiencies")[1] + practice.partition("Proficiencies")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 181) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 182) clericClassFeatures.append(practice.partition("Equipment")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 183) practice = practice.partition("Equipment")[1] + practice.partition("Equipment")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 184) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 185) clericClassFeatures.append(practice.partition("Spellcasting")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 186) practice = practice.partition("Spellcasting")[1] + practice.partition("Spellcasting")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 187) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 188) clericClassFeatures.append(practice.partition("Divine Domain")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 189) practice = practice.partition("Divine Domain")[1] + practice.partition("Divine Domain")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 190) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 191) clericClassFeatures.append(practice.partition("Channel Divinity")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 192) practice = practice.partition("Channel Divinity")[1] + practice.partition("Channel Divinity")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 193) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 194) clericClassFeatures.append(practice.partition("Harness Divine Power (Optional)")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 195) practice = (practice.partition("Harness Divine Power (Optional)")[1] +
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 196)             practice.partition("Harness Divine Power (Optional)")[2])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 197) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 198) clericClassFeatures.append("Divine Domain Feature")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 199) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 200) clericClassFeatures.append(practice.partition("Ability Score Improvement")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 201) practice = practice.partition("Ability Score Improvement")[1] + practice.partition("Ability Score Improvement")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 202) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 203) clericClassFeatures.append(practice.partition("Cantrip Versatility (Optional)")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 204) practice = (practice.partition("Cantrip Versatility (Optional)")[1] +
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 205)             practice.partition("Cantrip Versatility (Optional)")[2])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 206) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 207) clericClassFeatures.append(practice.partition("Destroy Undead")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 208) practice = practice.partition("Destroy Undead")[1] + practice.partition("Destroy Undead")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 209) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 210) clericClassFeatures.append("Channel Divinity 2")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 211) clericClassFeatures.append("Divine Domain Feature")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 212) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 213) clericClassFeatures.append("ASI")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 214) clericClassFeatures.append("Destroy Undead (CR 1)")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 215) clericClassFeatures.append("Divine Domain Feature")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 216) clericClassFeatures.append("Cantrip Versatility (Optional)")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 217) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 218) clericClassFeatures.append(practice.partition("Divine Intervention")[0])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 219) practice = practice.partition("Dive Intervention")[1] + practice.partition("Divine Intervention")[2]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 220) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 221) clericClassFeatures.append(practice)
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 222) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 223) clericClassFeatures.append("Destroy Undead (CR 2)")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 224) clericClassFeatures.append("ASI")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 225) clericClassFeatures.append("Cantrip Versatility (Optional)")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 226) clericClassFeatures.append("Destroy Undead (CR 3)")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 227) clericClassFeatures.append("ASI")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 228) clericClassFeatures.append("Cantrip Versatility (Optional)")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 229) clericClassFeatures.append("Destroy Undead (CR 4)")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 230) clericClassFeatures.append("Divine Domain Feature")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 231) clericClassFeatures.append("Channel Divinity 3")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 232) clericClassFeatures.append("ASI")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 233) clericClassFeatures.append("Cantrip Versatility (Optional)")
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 234) clericClassFeatures.append(practice.partition("long rest.")[2])
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 235) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 236) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 237) # Once the data has been scraped, it's info is then stored into a dictionary to associate the poper features with the proper levels. The dictionary is then made into a
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 238) # pandas dataframe.
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 239) barbData = {
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 240)     "class": classNames[0],
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 241)     "level": barbLevelUp,
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 242)     "features": barbClassFeatures,
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 243) }
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 244) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 245) df1 = pd.DataFrame(barbData)
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 246) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 247) bardData = {
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 248)     "class": classNames[1],
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 249)     "level": bardLevelUp,
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 250)     "features": bardClassFeatures
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 251) }
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 252) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 253) df2 = pd.DataFrame(bardData)
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 254) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 255) clericData = {
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 256)     "class": classNames[2],
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 257)     "level": clericLevelUp,
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 258)     "features": clericClassFeatures
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 259) }
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 260) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 261) df3 = pd.DataFrame(clericData)
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 262) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 263) # Once all of our dictionaries have been created, we than make a list of dictionaries and convert the entire list into a pandas dataframe. This allows all of the
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 264) # information to be stored in a single data structure
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 265) table = [df1, df2, df3]
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 266) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 267) finalDf = pd.concat(table)
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 268) finalDf = finalDf.reset_index()
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 269) 
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 270) # Allows the entire dataframe to be printed, rather than just the beginning and end. Purely for testing purposes
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 271) with pd.option_context('display.max_rows', None,
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 272)                        'display.max_columns', None,
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 273)                        'display.precision', 3,
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 274)                        ):
29131ae30 (JonClark28 2023-10-16 19:36:59 -0400 275)     print(finalDf)
