# race-data
9700e788b (TritonEden 2023-11-15 20:22:27 -0500   1) import requests
9700e788b (TritonEden 2023-11-15 20:22:27 -0500   2) import pandas as pd
9700e788b (TritonEden 2023-11-15 20:22:27 -0500   3) import _mysql_connector
9700e788b (TritonEden 2023-11-15 20:22:27 -0500   4) from bs4 import BeautifulSoup
9700e788b (TritonEden 2023-11-15 20:22:27 -0500   5) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500   6) # create a dictionary to store the data
9700e788b (TritonEden 2023-11-15 20:22:27 -0500   7) data = {
9700e788b (TritonEden 2023-11-15 20:22:27 -0500   8)     'Race': [],
9700e788b (TritonEden 2023-11-15 20:22:27 -0500   9)     'Description': [],
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  10)     'Features': [],
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  11)     'Subraces': [],
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  12)     'S1desc': [],
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  13)     'S1f': [],
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  14)     'S2desc': [],
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  15)     'S2f': [],
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  16)     'Tinker_Devices': []
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  17) }
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  18) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  19) d_ancestry = {
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  20)     'Dragon Color': [],
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  21)     'Damage Type': [],
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  22)     'Breath Weapon': []
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  23) }
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  24) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  25) # dragonborn
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  26) URL = "http://dnd5e.wikidot.com/dragonborn"
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  27) page = requests.get(URL)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  28) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  29) soup = BeautifulSoup(page.content, "html.parser")
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  30) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  31) # title
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  32) title = soup.find('div', class_='page-title page-header').text
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  33) data['Race'].append(title)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  34) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  35) page_content = soup.find('div', id='page-content')
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  36) for index, content in enumerate(page_content):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  37)     # description
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  38)     if index == 5:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  39)         data['Description'].append(content.text)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  40)     # features
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  41)     if index % 2 != 0 and index > 5 and index < 18:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  42)         data['Features'].append(content.text.replace('\n', ''))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  43)     # draconic ancestry table
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  44)     if index == 19:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  45)         table = soup.find('table', class_='wiki-content-table')
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  46)         c = 0
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  47)         for index2, item in enumerate(table.find_all('td')):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  48)             if c == 0:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  49)                 d_ancestry['Dragon Color'].append(item.text)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  50)                 c+=1
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  51)             elif c == 1:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  52)                 d_ancestry['Damage Type'].append(item.text)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  53)                 c+=1
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  54)             elif c == 2:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  55)                 d_ancestry['Breath Weapon'].append(item.text)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  56)                 c = 0
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  57)     if index % 2 != 0 and index > 19 and index < 26:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  58)         data['Features'].append(content.text.replace('\n', ''))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  59) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  60) # make sure all arrays are of the same length
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  61) for i in range(8):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  62)     data['Race'].append(title)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  63)     data['Description'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  64) for i in range(9):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  65)     data['Subraces'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  66)     data['S1desc'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  67)     data['S1f'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  68)     data['S2desc'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  69)     data['S2f'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  70)     data['Tinker_Devices'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  71) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  72) # dwarf
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  73) URL = "http://dnd5e.wikidot.com/dwarf"
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  74) page = requests.get(URL)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  75) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  76) soup = BeautifulSoup(page.content, "html.parser")
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  77) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  78) # title
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  79) title = soup.find('div', class_='page-title page-header').text
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  80) data['Race'].append(title)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  81) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  82) page_content = soup.find('div', id='page-content')
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  83) for index, content in enumerate(page_content):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  84)     # description
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  85)     if index == 5:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  86)         data['Description'].append(content.text.replace('\xa0', ' '))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  87)     # features
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  88)     if index % 2 != 0 and index > 5 and index < 28:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  89)         data['Features'].append(content.text.replace('\n', ''))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  90)     # subraces
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  91)     # hill dwarf
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  92)     if index == 29:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  93)         data['Subraces'].append(content.text)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  94)     if index == 31:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  95)         data['S1desc'].append(content.text)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  96)     if index == 33 or index == 35:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  97)         data['S1f'].append(content.text.replace('\n', ''))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  98)     # mountain dwarf
9700e788b (TritonEden 2023-11-15 20:22:27 -0500  99)     if index == 37:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 100)         data['Subraces'].append(content.text)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 101)     if index == 39:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 102)         data['S2desc'].append(content.text)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 103)     if index == 41 or index == 43:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 104)         data['S2f'].append(content.text.replace('\n', ''))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 105) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 106) # make sure all arrays are of the same length
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 107) for i in range(10):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 108)     data['Race'].append(title)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 109)     data['Description'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 110)     data['S1desc'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 111)     data['S2desc'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 112) for i in range(9):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 113)     data['Subraces'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 114)     data['S1f'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 115)     data['S2f'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 116) for i in range(11):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 117)     data['Tinker_Devices'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 118) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 119) # elf
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 120) URL = "http://dnd5e.wikidot.com/elf"
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 121) page = requests.get(URL)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 122) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 123) soup = BeautifulSoup(page.content, "html.parser")
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 124) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 125) # title
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 126) title = soup.find('div', class_='page-title page-header').text
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 127) data['Race'].append(title)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 128) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 129) page_content = soup.find('div', id='page-content')
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 130) for index, content in enumerate(page_content):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 131)     # description
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 132)     if index == 5:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 133)         data['Description'].append(content.text.replace('\xa0', ' '))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 134)     # features
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 135)     if index % 2 != 0 and index > 6 and index < 26:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 136)         data['Features'].append(content.text.replace('\n', ''))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 137)     # subraces
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 138)     # high elf
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 139)     if index == 43:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 140)         data['Subraces'].append(content.text)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 141)     if index == 45 or index == 47:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 142)         data['S1desc'].append(content.text)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 143)     if index % 2 != 0 and index > 47 and index < 56:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 144)         data['S1f'].append(content.text.replace('\n', ''))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 145)     # wood elf
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 146)     if index == 57:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 147)         data['Subraces'].append(content.text)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 148)     if index == 59 or index == 61:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 149)         data['S2desc'].append(content.text)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 150)     if index % 2 != 0 and index > 61 and index < 70:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 151)         data['S2f'].append(content.text.replace('\n', ''))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 152) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 153) # make sure all arrays are of the same length
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 154) for i in range(9):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 155)     data['Race'].append(title)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 156)     data['Description'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 157) for i in range(8):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 158)     data['Subraces'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 159)     data['S1desc'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 160)     data['S2desc'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 161) for i in range(6):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 162)     data['S1f'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 163)     data['S2f'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 164) for i in range(10):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 165)     data['Tinker_Devices'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 166) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 167) # gnome
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 168) URL = "http://dnd5e.wikidot.com/gnome"
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 169) page = requests.get(URL)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 170) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 171) soup = BeautifulSoup(page.content, "html.parser")
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 172) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 173) # title
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 174) title = soup.find('div', class_='page-title page-header').text
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 175) data['Race'].append(title)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 176) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 177) page_content = soup.find('div', id='page-content')
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 178) for index, content in enumerate(page_content):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 179)     # description
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 180)     if index == 5:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 181)         data['Description'].append(content.text.replace('\xa0', ' '))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 182)     # features
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 183)     if index % 2 != 0 and index > 6 and index < 22:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 184)         data['Features'].append(content.text.replace('\n', ''))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 185)     # subraces
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 186)     # forest gnome
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 187)     if index == 23:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 188)         data['Subraces'].append(content.text + ' Gnome')
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 189)     if index == 25:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 190)         data['S1desc'].append(content.text)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 191)     if index % 2 != 0 and index > 25 and index < 32:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 192)         data['S1f'].append(content.text.replace('\n', ''))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 193)     # forest gnome
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 194)     if index == 33:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 195)         data['Subraces'].append(content.text + ' Gnome')
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 196)     if index == 35:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 197)         data['S2desc'].append(content.text)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 198)     if index % 2 != 0 and index > 35 and index < 40:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 199)         data['S2f'].append(content.text.replace('\n', ''))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 200)     # getting the tinker feature
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 201)     # parse the tinker devices and add them
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 202)     if index == 41:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 203)         tinker = content.text.split('\n')
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 204)         data['S2f'].append(tinker[1])
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 205)         data['Tinker_Devices'].append(tinker[3])
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 206)         data['Tinker_Devices'].append(tinker[4])
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 207)         data['Tinker_Devices'].append(tinker[5])
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 208)         data['Tinker_Devices'].append(tinker[6])
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 209) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 210) # make sure all arrays are of the same length
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 211) for i in range(7):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 212)     data['Race'].append(title)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 213)     data['Description'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 214)     data['S1desc'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 215)     data['S2desc'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 216) for i in range(6):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 217)     data['Subraces'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 218) for i in range(5):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 219)     data['S1f'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 220)     data['S2f'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 221) for i in range(4):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 222)     data['Tinker_Devices'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 223) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 224) # half-elf
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 225) URL = "http://dnd5e.wikidot.com/half-elf"
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 226) page = requests.get(URL)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 227) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 228) soup = BeautifulSoup(page.content, "html.parser")
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 229) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 230) # title
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 231) title = soup.find('div', class_='page-title page-header').text
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 232) data['Race'].append(title)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 233) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 234) page_content = soup.find('div', id='page-content')
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 235) for index, content in enumerate(page_content):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 236)     # description
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 237)     if index == 5:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 238)         data['Description'].append(content.text)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 239)     # features
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 240)     if index % 2 != 0 and index > 5 and index < 22:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 241)         data['Features'].append(content.text.replace('\n', ''))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 242)     # feature: skill versatility
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 243)     if index == 23:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 244)         mark1 = content.find('li')
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 245)         versatility = mark1.find('ul')
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 246)         for index2, point in enumerate(versatility):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 247)             if index2 == 1:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 248)                 data['Features'].append(point.text.replace('\n', '').replace(' (General)', ''))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 249) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 250) # make sure all arrays are of the same length
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 251) for i in range(8):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 252)     data['Race'].append(title)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 253)     data['Description'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 254) for i in range(9):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 255)     data['Subraces'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 256)     data['S1desc'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 257)     data['S1f'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 258)     data['S2desc'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 259)     data['S2f'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 260)     data['Tinker_Devices'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 261) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 262) # half-orc
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 263) URL = "http://dnd5e.wikidot.com/half-orc"
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 264) page = requests.get(URL)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 265) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 266) soup = BeautifulSoup(page.content, "html.parser")
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 267) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 268) # title
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 269) title = soup.find('div', class_='page-title page-header').text
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 270) data['Race'].append(title)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 271) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 272) page_content = soup.find('div', id='page-content')
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 273) for index, content in enumerate(page_content):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 274)     # description
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 275)     if index == 5:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 276)         data['Description'].append(content.text)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 277)     # features
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 278)     if index % 2 != 0 and index > 5 and index < 26:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 279)         data['Features'].append(content.text.replace('\n', ''))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 280) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 281) # make sure all arrays are of the same length
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 282) for i in range(9):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 283)     data['Race'].append(title)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 284)     data['Description'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 285) for i in range(10):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 286)     data['Subraces'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 287)     data['S1desc'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 288)     data['S1f'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 289)     data['S2desc'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 290)     data['S2f'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 291)     data['Tinker_Devices'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 292) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 293) # halfling
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 294) URL = "http://dnd5e.wikidot.com/halfling"
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 295) page = requests.get(URL)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 296) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 297) soup = BeautifulSoup(page.content, "html.parser")
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 298) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 299) # title
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 300) title = soup.find('div', class_='page-title page-header').text
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 301) data['Race'].append(title)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 302) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 303) page_content = soup.find('div', id='page-content')
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 304) for index, content in enumerate(page_content):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 305)     # description
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 306)     if index == 5:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 307)         data['Description'].append(content.text.replace('\xa0', ' '))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 308)     # features
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 309)     if index % 2 != 0 and index > 6 and index < 24:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 310)         data['Features'].append(content.text.replace('\n', ''))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 311)     # subraces
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 312)     # lightfoot halfling
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 313)     if index == 25:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 314)         data['Subraces'].append(content.text + ' Halfling')
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 315)     if index == 27 or index == 29:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 316)         data['S1desc'].append(content.text)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 317)     if index % 2 != 0 and index > 29 and index < 34:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 318)         data['S1f'].append(content.text.replace('\n', ''))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 319)     # stout halfling
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 320)     if index == 35:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 321)         data['Subraces'].append(content.text + ' Halfling')
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 322)     if index == 37:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 323)         data['S2desc'].append(content.text)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 324)     if index % 2 != 0 and index > 37 and index < 42:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 325)         data['S2f'].append(content.text.replace('\n', ''))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 326) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 327) # make sure all arrays are of the same length
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 328) for i in range(8):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 329)     data['Race'].append(title)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 330)     data['Description'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 331)     data['S2desc'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 332) for i in range(7):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 333)     data['Subraces'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 334)     data['S1desc'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 335)     data['S1f'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 336)     data['S2f'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 337) for i in range(9):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 338)     data['Tinker_Devices'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 339) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 340) # human
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 341) URL = "http://dnd5e.wikidot.com/lineage:human"
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 342) page = requests.get(URL)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 343) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 344) soup = BeautifulSoup(page.content, "html.parser")
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 345) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 346) # title
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 347) title = soup.find('div', class_='page-title page-header').text
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 348) data['Race'].append(title)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 349) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 350) page_content = soup.find('div', id='page-content')
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 351) for index, content in enumerate(page_content):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 352)     # description
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 353)     if index == 5:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 354)         data['Description'].append(content.text.replace('\xa0', ' '))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 355)     # features
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 356)     if index % 2 != 0 and index > 5 and index < 18:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 357)         data['Features'].append(content.text.replace('\n', ''))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 358) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 359) # make sure all arrays are of the same length
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 360) for i in range(5):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 361)     data['Race'].append(title)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 362)     data['Description'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 363) for i in range(6):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 364)     data['Subraces'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 365)     data['S1desc'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 366)     data['S1f'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 367)     data['S2desc'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 368)     data['S2f'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 369)     data['Tinker_Devices'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 370) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 371) # tiefling
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 372) URL = "http://dnd5e.wikidot.com/tiefling"
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 373) page = requests.get(URL)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 374) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 375) soup = BeautifulSoup(page.content, "html.parser")
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 376) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 377) # title
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 378) title = soup.find('div', class_='page-title page-header').text
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 379) data['Race'].append(title)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 380) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 381) page_content = soup.find('div', id='page-content')
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 382) for index, content in enumerate(page_content):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 383)     # description
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 384)     if index == 5:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 385)         data['Description'].append(content.text.replace('\xa0', ' '))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 386)     # features
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 387)     if index % 2 != 0 and index > 6 and index < 22:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 388)         data['Features'].append(content.text.replace('\n', ''))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 389)     # subrace
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 390)     # bloodline of asmodeus tiefling
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 391)     if index == 23:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 392)         data['Subraces'].append(content.text + ' Tiefling')
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 393)     if index == 25:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 394)         data['S1desc'].append(content.text)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 395)     if index == 27 or index == 29:
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 396)         data['S1f'].append(content.text.replace('\n', ''))
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 397) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 398) # make sure all arrays are of the same length
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 399) for i in range(7):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 400)     data['Race'].append(title)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 401)     data['Description'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 402)     data['Subraces'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 403)     data['S1desc'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 404) for i in range(6):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 405)     data['S1f'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 406) for i in range(8):
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 407)     data['S2desc'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 408)     data['S2f'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 409)     data['Tinker_Devices'].append(pd.NA)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 410) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 411) # convert the dictionary to a pandas DataFrame
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 412) df = pd.DataFrame(data)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 413) da = pd.DataFrame(d_ancestry)
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 414) 
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 415) # convert the pandas Dataframes to .csv files
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 416) df.to_csv('racedata.csv')
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 417) da.to_csv('d_ancestry.csv')
9700e788b (TritonEden 2023-11-15 20:22:27 -0500 418) 

# tools
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500  1) import requests
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500  2) import pandas as pd
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500  3) import _mysql_connector
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500  4) from bs4 import BeautifulSoup
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500  5) 
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500  6) # create a dictionary to store the data
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500  7) data = {
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500  8)     'Tool Set': [],
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500  9)     'Category': [],
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 10)     'Cost': [],
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 11)     'Weight': []
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 12) }
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 13) 
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 14) URL = "http://dnd5e.wikidot.com/tools"
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 15) page = requests.get(URL)
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 16) 
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 17) soup = BeautifulSoup(page.content, "html.parser")
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 18) 
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 19) table = soup.find('table', class_='wiki-content-table')
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 20) 
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 21) # set the tool categories
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 22) for index2, item in enumerate(table.find_all('th')):
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 23)     if index2 == 3:
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 24)         for i in range(17):
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 25)             data['Category'].append(item.text)
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 26)     if index2 == 6:
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 27)         for i in range(4):
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 28)             data['Category'].append(item.text)
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 29)     if index2 == 9:
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 30)         for i in range(10):
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 31)             data['Category'].append(item.text)
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 32)     if index2 == 12:
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 33)         for i in range(6):
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 34)             data['Category'].append(item.text)
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 35) c = 0
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 36) for index3, item1 in enumerate(table.find_all('td')):
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 37)     if c == 0:
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 38)         data['Tool Set'].append(item1.text)
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 39)         c += 1
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 40)     elif c == 1:
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 41)         data['Cost'].append(item1.text)
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 42)         c += 1
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 43)     elif c == 2:
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 44)         data['Weight'].append(item1.text.replace('\xa0', ' '))
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 45)         c = 0
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 46) 
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 47) # convert the dictionary to a pandas DataFrame
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 48) df = pd.DataFrame(data)
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 49) 
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 50) # convert the pandas dataframe to a .csv file
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 51) df.to_csv('tool.csv')
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 52) 
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 53) # print out the Dataframe
44eca3aa5 (TritonEden 2023-11-15 20:29:12 -0500 54) print(df)
